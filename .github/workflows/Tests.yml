name: Tests
on:
  push:
    branches:
      - master
      - main
    tags-ignore:
      - v[0-9].[0-9].[0-9]  # prevent double runs for vM.N.P releases
  pull_request:
    branches:
      - master
      - main
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run workflow with ssh debugging'
        required: false
        default: false
  release:
    types: [published]

  schedule:
    - cron: '0 0 * * 0'

env:
  PACKAGE_NAME: pymer4
  DEPLOY_PY_VER: 3.8  # only this job deploys docs, anaconda.org, pypi
  DEPLOY_OS: ubuntu-latest
  CONDA_BLD_PATH: /tmp/ci_conda_bld

defaults:
  run:
    # login shell to source the conda hook in .bash_profile
    shell:
      bash -l {0}

jobs:
  ci:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        py_ver: [3.7, 3.8, 3.9, 3.10, 3.11]
        os: [ubuntu-latest, macos-11]

    outputs:
      # tarballs are py3X job-specific
      conda-tarball: ${{ steps.conda-bld.outputs.conda-tarball }}

    steps:

      # ------------------------------------------------------------
      # 0. Print some basic github action info
      - name: diagnostic info
        run: |
          echo "OS: ${{ matrix.os }}" 
          echo "Python: ${{ matrix.py_ver }}" 
          echo "Conda build path: $CONDA_BLD_PATH"
          echo "Deploy OS: $DEPLOY_OS"
          echo "Deploy Python: $DEPLOY_PY_VER"
          echo "GA event name: ${{ github.event_name }}"
          echo "GA ref: ${{ github.ref }}"

      # ------------------------------------------------------------
      # Step up miniconda
      - name: Download Miniconda
        uses: conda-incubator/setup-miniconda@059455a698430d8b68fa317268fa2e3da3492a98
        with:
          miniconda-version: "latest"
          python-version: ${{ matrix.py_ver }}

      # ------------------------------------------------------------
      # Get code
      - name: Checkout code
        uses: actions/checkout@v2

      # ------------------------------------------------------------
      # Setup conda build environment and build package
      # env defined here are just for convenience when writing bash commands
      - name: Install package
        env:
          PY_VER: ${{ matrix.py_ver }}
        run: |
          conda config --set always_yes yes --set changeps1 no
          conda create -n pkg_test -c conda-forge python=$PY_VER 'r-lmerTest' 'r-emmeans'
          conda activate pkg_test
          pip install -r requirements-dev.txt
          pip install .

      # ------------------------------------------------------------
      # Run tests
      - name: Test installation and Run Test Suite
        run: |
          conda activate pkg_test
          python -c "from pymer4.test_install import test_install; test_install()"
          pytest pymer4/tests
